/* eslint-disable curly */
import fs from "fs";
import path from "path";
import {fileURLToPath} from "url";
import {initializeABAP} from "./init.mjs";

const __dirname = path.dirname(fileURLToPath(import.meta.url));

async function run() {
  await initializeABAP();
  let lt_input = new abap.types.Table(new abap.types.Structure({class_name: new abap.types.Character(30), testclass_name: new abap.types.Character(30), method_name: new abap.types.Character(30)}), {"withHeader":false,"type":"STANDARD","isUnique":false,"keyFields":[]});
  let ls_input = new abap.types.Structure({class_name: new abap.types.Character(30), testclass_name: new abap.types.Character(30), method_name: new abap.types.Character(30)});
  let ls_result = new abap.types.Structure({list: new abap.types.Table(new abap.types.Structure({class_name: new abap.types.Character(30), testclass_name: new abap.types.Character(30), method_name: new abap.types.Character(30), expected: new abap.types.String(), actual: new abap.types.String(), status: new abap.types.String(), runtime: new abap.types.Integer(), message: new abap.types.String(), js_location: new abap.types.String(), console: new abap.types.String()}), {"withHeader":false,"type":"STANDARD","isUnique":false,"keyFields":[]}), json: new abap.types.String()});
  await import("./z2ui5_cl_ajson.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_KEEPING_ORDER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_STRING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_NUMBER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_FLOAT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_BOOLEAN");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_FALSE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_NULL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_DATE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_BARE_VALUES");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("PARSE_ERROR");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("DUPLICATE_KEY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_PARSER_TEST");
  ls_input.get().method_name.set("NON_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("STRINGIFY_CONDENSED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("STRINGIFY_INDENTED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("ARRAY_INDEX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("ITEM_ORDER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("SIMPLE_INDENTED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("EMPTY_SET");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("ESCAPE_STRING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_SERIALIZER_TEST");
  ls_input.get().method_name.set("EMPTY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_UTILS_TEST");
  ls_input.get().method_name.set("NORMALIZE_PATH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_UTILS_TEST");
  ls_input.get().method_name.set("SPLIT_PATH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_UTILS_TEST");
  ls_input.get().method_name.set("VALIDATE_ARRAY_INDEX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_UTILS_TEST");
  ls_input.get().method_name.set("STRING_TO_XSTRING_UTF8");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("GET_VALUE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("GET_NODE_TYPE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("EXISTS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("VALUE_INTEGER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("VALUE_NUMBER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("VALUE_BOOLEAN");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("VALUE_STRING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("MEMBERS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("SLICE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("ARRAY_TO_STRING_TABLE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("GET_DATE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_READER_TEST");
  ls_input.get().method_name.set("GET_TIMESTAMP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_TIMESTAMP_INITIAL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_VALUE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_ARRAY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_ARRAY_OF_ARRAYS_SIMPLE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_ARRAY_OF_ARRAYS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_W_TAB_OF_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_W_PLAIN_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_HASHED_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_SORTED_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_HASHED_PLAIN_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_NEGATIVE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_CORRESPONDING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_CORRESPONDING_NEGATIVE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_CORRESPONDING_PUBLIC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_CORRESPONDING_PUB_NEG");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_TIME");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_STR_TO_PACKED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_COMPRESSED_STDRD");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_COMPRESSED_STDRD_KEY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_COMPRESSED_SORT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_COMPRESSED_SORT_UNIQUE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_JSON_TO_ABAP");
  ls_input.get().method_name.set("TO_ABAP_COMPRESSED_HASH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_AJSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_VALUE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("IGNORE_EMPTY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_OBJ_W_DATE_TIME");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_TAB_HASHED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_TAB_NESTED_STRUCT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("PROVE_PATH_EXISTS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("DELETE_SUBTREE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("DELETE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("ARRAYS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("ARRAYS_NEGATIVE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("ROOT_ASSIGNMENT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_BOOL_ABAP_BOOL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_BOOL_INT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_BOOL_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_STR");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_INT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_DATE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_TIMESTAMP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("READ_ONLY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_ARRAY_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SET_WITH_TYPE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("NEW_ARRAY_W_KEEP_ORDER_TOUCH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("OVERWRITE_W_KEEP_ORDER_TOUCH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("OVERWRITE_W_KEEP_ORDER_SET");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SETX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SETX_FLOAT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SETX_COMPLEX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_WRITER_TEST");
  ls_input.get().method_name.set("SETX_COMPLEX_W_KEEP_ORDER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("READER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("ARRAY_INDEX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("ARRAY_SIMPLE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("STRINGIFY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("ITEM_ORDER_INTEGRATED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("CHAINING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("PUSH_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_INTEGRATED");
  ls_input.get().method_name.set("IS_EMPTY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_AJSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_NUMBER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_STRING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_TRUE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_FALSE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_XSDBOOLEAN");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_TIMESTAMP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_VALUE_TIMESTAMP_INITIAL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_NULL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_ARRAY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_COMPLEX_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("SET_INCLUDE_WITH_SUFFIX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_ABAP_TO_JSON");
  ls_input.get().method_name.set("PREFIX");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_FILTER_TEST");
  ls_input.get().method_name.set("SIMPLE_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_FILTER_TEST");
  ls_input.get().method_name.set("ARRAY_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_FILTER_TEST");
  ls_input.get().method_name.set("VISIT_TYPES");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_MAPPER_TEST");
  ls_input.get().method_name.set("SIMPLE_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_MAPPER_TEST");
  ls_input.get().method_name.set("ARRAY_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_MAPPER_TEST");
  ls_input.get().method_name.set("DUPLICATION_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_MAPPER_TEST");
  ls_input.get().method_name.set("EMPTY_NAME_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_MAPPER_TEST");
  ls_input.get().method_name.set("TRIVIAL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_CLONING_TEST");
  ls_input.get().method_name.set("CLONE_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_CLONING_TEST");
  ls_input.get().method_name.set("FILTER_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_CLONING_TEST");
  ls_input.get().method_name.set("MAPPER_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_CLONING_TEST");
  ls_input.get().method_name.set("MAPPER_AND_FILTER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON");
  ls_input.get().testclass_name.set("LTCL_CLONING_TEST");
  ls_input.get().method_name.set("OPTS_COPYING");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_ajson_filter_lib.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("EMPTY_FILTER_SIMPLE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("EMPTY_FILTER_DEEP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("PATH_FILTER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("PATH_FILTER_STRING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("PATH_FILTER_W_PATTERNS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("PATH_FILTER_DEEP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_FILTER_LIB");
  ls_input.get().testclass_name.set("LTCL_FILTERS_TEST");
  ls_input.get().method_name.set("AND_FILTER");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_ajson_mapping.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("FROM_JSON_TO_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_ABAP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_JSON_NESTED_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_JSON_NESTED_TABLE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_JSON_FIRST_LOWER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_SNAKE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_CAMEL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TO_CAMEL_1ST_UPPER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("RENAME_BY_ATTR");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("RENAME_BY_PATH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("RENAME_BY_PATTERN");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("COMPOUND_MAPPER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TEST_TO_UPPER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TEST_MAPPERS");
  ls_input.get().method_name.set("TEST_TO_LOWER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_FIELDS");
  ls_input.get().method_name.set("TO_JSON_WITHOUT_PATH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_FIELDS");
  ls_input.get().method_name.set("TO_JSON_WITH_PATH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_FIELDS");
  ls_input.get().method_name.set("TO_ABAP");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TO_LOWER");
  ls_input.get().method_name.set("TO_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_MAPPING");
  ls_input.get().testclass_name.set("LTCL_TO_UPPER");
  ls_input.get().method_name.set("TO_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_ajson_utilities.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_UTILITIES");
  ls_input.get().testclass_name.set("LTCL_JSON_UTILS");
  ls_input.get().method_name.set("JSON_DIFF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_UTILITIES");
  ls_input.get().testclass_name.set("LTCL_JSON_UTILS");
  ls_input.get().method_name.set("JSON_DIFF_TYPES");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_UTILITIES");
  ls_input.get().testclass_name.set("LTCL_JSON_UTILS");
  ls_input.get().method_name.set("JSON_DIFF_ARRAYS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_UTILITIES");
  ls_input.get().testclass_name.set("LTCL_JSON_UTILS");
  ls_input.get().method_name.set("JSON_MERGE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_UTILITIES");
  ls_input.get().testclass_name.set("LTCL_JSON_UTILS");
  ls_input.get().method_name.set("JSON_SORT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_AJSON_UTILITIES");
  ls_input.get().testclass_name.set("LTCL_JSON_UTILS");
  ls_input.get().method_name.set("IS_EQUAL");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cx_ajson_error.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CX_AJSON_ERROR");
  ls_input.get().testclass_name.set("LTCL_ERROR");
  ls_input.get().method_name.set("RAISE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CX_AJSON_ERROR");
  ls_input.get().testclass_name.set("LTCL_ERROR");
  ls_input.get().method_name.set("RAISE_W_LOCATION");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CX_AJSON_ERROR");
  ls_input.get().testclass_name.set("LTCL_ERROR");
  ls_input.get().method_name.set("RAISE_W_NODE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CX_AJSON_ERROR");
  ls_input.get().testclass_name.set("LTCL_ERROR");
  ls_input.get().method_name.set("SET_LOCATION");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_abap_api.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_ABAP_API");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("TEST_FUNC_GET_UUID_32");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_ABAP_API");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("TEST_FUNC_GET_UUID_22");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_ABAP_API");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("TEST_ENCODING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_ABAP_API");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("TEST_ELEMENT_TEXT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_ABAP_API");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("TEST_CLASSES_IMPL_INTF");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cx_abap_api.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CX_ABAP_API");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RAISE");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_util.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_ASSIGN");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_ELEDESCR_REL_NAME");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_CLASSDESCR");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_SUBSTRING_AFTER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_SUBSTRING_BEFORE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_STRING_SHIFT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_STRING_REPLACE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_RAISE_ERROR");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_XSDBOOL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST_ABAP_API");
  ls_input.get().method_name.set("TEST_XSDBOOL_NESTED");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_CREATE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_BOOLEAN_ABAP_2_JSON");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_BOOLEAN_CHECK");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_C_TRIM");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_C_TRIM_LOWER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_C_TRIM_UPPER");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_C_TRIM_HORIZONTAL_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TIME_GET_TIMESTAMPL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TIME_SUBSTRACT_SECONDS");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_FUNC_GET_USER_TECH");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_GET_T_ATTRI_BY_INCL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_GET_CLASSNAME_BY_REF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_GET_TYPE_NAME");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_GET_TYPE_KIND");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_CHECK_TYPE_KIND");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_GET_T_ATTRI_BY_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RTTI_GET_T_COMP_BY_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TRANS_JSON_ANY_2__W_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TRANS_XML_ANY_2__W_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TRANS_XML_ANY_2__W_DATA");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TRANS_XML_2_ANY__W_OBJ");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_TRANS_XML_2_ANY__W_DATA");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_URL_PARAM_CREATE_URL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_URL_PARAM_GET");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_URL_PARAM_GET_TAB");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_URL_PARAM_SET");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_X_CHECK_RAISE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_X_CHECK_RAISE_NOT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_X_RAISE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_CHECK_UNASSIGN_INITAL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("CONV_COPY_REF_DATA");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("RTTI_CHECK_REF_DATA");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_CHECK_BOUND_A_NOT_INITAL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_SQL_GET_BY_STRING");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_UTIL");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_GET_TOKEN_T_BY_R_T");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cx_util_error.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CX_UTIL_ERROR");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_RAISE");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_draft_srv.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DRAFT_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("TEST_CREATE");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_action.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ACTION");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("FIRST_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_app.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_APP");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("FIRST_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_APP");
  ls_input.get().testclass_name.set("LTCL_TEST_DB");
  ls_input.get().method_name.set("TEST_DB_SAVE");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_app_startup.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_APP_STARTUP");
  ls_input.get().testclass_name.set("LTCL_APP_STARTUP_TEST");
  ls_input.get().method_name.set("FIRST_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_attri_srv.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_SEARCH_ATTRI");
  ls_input.get().method_name.set("FIRST_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_SEARCH_ATTRI");
  ls_input.get().method_name.set("SECOND_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_SEARCH_ATTRI");
  ls_input.get().method_name.set("THIRD_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_GET_ATTRI");
  ls_input.get().method_name.set("FIRST_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_GET_ATTRI");
  ls_input.get().method_name.set("SECOND_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_GET_ATTRI");
  ls_input.get().method_name.set("THIRD_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_ATTRI_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_GET_ATTRI");
  ls_input.get().method_name.set("TEST4");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_bind_srv.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_BIND");
  ls_input.get().method_name.set("TEST_ONE_WAY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_BIND");
  ls_input.get().method_name.set("TEST_ONE_WAY_W_X_ERROR");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_BIND");
  ls_input.get().method_name.set("TEST_ERROR_DIFF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_BIND");
  ls_input.get().method_name.set("TEST_TWO_WAY");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_BIND");
  ls_input.get().method_name.set("TEST_LOCAL");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_BIND");
  ls_input.get().method_name.set("TEST_LOCAL_ONE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_MAIN_STRUCTURE");
  ls_input.get().method_name.set("TEST_ONE_WAY_LEV1");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_MAIN_STRUCTURE");
  ls_input.get().method_name.set("TEST_ONE_WAY_LEV2");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_MAIN_STRUCTURE");
  ls_input.get().method_name.set("TEST_ONE_WAY_LEV3");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_MAIN_STRUCTURE");
  ls_input.get().method_name.set("TEST_ONE_WAY_LEV4_LONG_NAME");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_MAIN_OBJECT");
  ls_input.get().method_name.set("TEST_ONE_WAY_VALUE");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_BIND_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_MAIN_OBJECT");
  ls_input.get().method_name.set("TEST_ONE_WAY_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_client.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_CLIENT");
  ls_input.get().testclass_name.set("LTCL_TEST_CLIENT");
  ls_input.get().method_name.set("FIRST_TEST");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_diss_srv.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_INIT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_DREF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_STRUC_DREF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_OREF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_REF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_OREF_DREF_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_OREF_DREF");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_DISS_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST_DISSOLVE");
  ls_input.get().method_name.set("TEST_DREF_STRUC");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_event_srv.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_EVENT_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("EVENT");
  abap.statements.append({source: ls_input, target: lt_input});
  ls_input.get().class_name.set("Z2UI5_CL_CORE_EVENT_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("EVENT_BACKEND");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_http_post.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_HTTP_POST");
  ls_input.get().testclass_name.set("LTCL_TEST_HANDLER_POST");
  ls_input.get().method_name.set("LOAD_STARTUP_APP");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_core_json_srv.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_CORE_JSON_SRV");
  ls_input.get().testclass_name.set("LTCL_TEST");
  ls_input.get().method_name.set("REQUEST_JSON_TO_ABAP");
  abap.statements.append({source: ls_input, target: lt_input});
  await import("./z2ui5_cl_xml_view.clas.testclasses.mjs");
  ls_input.get().class_name.set("Z2UI5_CL_XML_VIEW");
  ls_input.get().testclass_name.set("LTCL_UNIT_TEST");
  ls_input.get().method_name.set("TEST_CREATE");
  abap.statements.append({source: ls_input, target: lt_input});


  ls_result.set(await abap.Classes["KERNEL_UNIT_RUNNER"].run({it_input: lt_input}));
  fs.writeFileSync(__dirname + path.sep + "output.json", ls_result.get().json.get());
}

run().then(() => {
  process.exit(0);
}).catch((err) => {
  console.log(err);
  process.exit(1);
});