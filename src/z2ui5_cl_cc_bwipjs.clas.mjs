const {cx_root} = await import("./cx_root.clas.mjs");
// z2ui5_cl_cc_bwipjs.clas.abap
class z2ui5_cl_cc_bwipjs {
  static INTERNAL_TYPE = 'CLAS';
  static INTERNAL_NAME = 'Z2UI5_CL_CC_BWIPJS';
  static IMPLEMENTED_INTERFACES = [];
  static ATTRIBUTES = {"CV_SRC": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"}};
  static METHODS = {"GET_T_BARCODE_TYPES": {"visibility": "U", "parameters": {"RESULT": {"type": () => {return abap.types.TableFactory.construct(new abap.types.Structure({"sym": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-SYM"}), "desc": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-DESC"}), "text": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-TEXT"}), "opts": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-OPTS"})}, "z2ui5_cl_cc_bwipjs=>ty_s_barcode", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_cc_bwipjs=>ty_t_barcode");}, "is_optional": " "}}},
  "GET_JS_LIB_LOCAL": {"visibility": "U", "parameters": {"RESULT": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "is_optional": " "}}},
  "GET_JS": {"visibility": "U", "parameters": {"R_JS": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "is_optional": " "}}}};
  constructor() {
    this.me = new abap.types.ABAPObject();
    this.me.set(this);
    this.cv_src = z2ui5_cl_cc_bwipjs.cv_src;
  }
  async constructor_(INPUT) {
    if (super.constructor_) { await super.constructor_(INPUT); }
    return this;
  }
  async get_js() {
    return z2ui5_cl_cc_bwipjs.get_js();
  }
  static async get_js() {
    let r_js = new abap.types.String({qualifiedName: "STRING"});
    r_js.set(abap.operators.concat(new abap.types.String().set(`    sap.ui.define("z2ui5/bwipjs", [`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            "sap/ui/core/Control",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`        ], function (Control) {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            "use strict";`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            return Control.extend("z2ui5.bwipjs", {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                metadata: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    properties: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        bcid: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            type: "string",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            defaultValue: ""`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        text: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            type: "string",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            defaultValue: ""`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        scale: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            type: "string",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            defaultValue: ""`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        height: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            type: "string",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            defaultValue: ""`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        includetext: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            type: "string",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            defaultValue: ""`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        textalign: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            type: "string",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            defaultValue: ""`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        }`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    aggregations: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    events: {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        "upload": {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            allowPreventDefault: true,`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                            parameters: {}`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                        }`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    renderer: null`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`  init() {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`      },`),abap.operators.concat(new abap.types.String().set(`   onAfterRendering() {  `),abap.operators.concat(new abap.types.String().set(`     if(window.bwipjs == undefined) {  const loadScript = (FILE_URL, async = true, type = "text/javascript") => {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`              return new Promise((resolve, reject) => {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                  try {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      const scriptEle = document.createElement("script");`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      scriptEle.type = type;`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      scriptEle.async = async;`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      scriptEle.src =FILE_URL;`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      scriptEle.addEventListener("load", (ev) => {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                          resolve({ status: true });`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      });`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      scriptEle.addEventListener("error", (ev) => {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                          reject({`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                              status: false,`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                              message: \`Failed to load the script \${FILE_URL}\``),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                          });`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      });`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      document.body.appendChild(scriptEle);`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                  } catch (error) {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                      reject(error);`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                  }`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`              });`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`          };`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`          `),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`          this.BusyDialog = new sap.m.BusyDialog( { title : "Loading bwip-js", text : "... now loading the data from a far away server" });`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`          this.BusyDialog.open();`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`          loadScript("https://cdnjs.cloudflare.com/ajax/libs/bwip-js/4.1.1/bwip-js-min.js")`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`              .then( data  => {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                  this.BusyDialog.close();`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(` let canvas = bwipjs.toCanvas('mycanvas', {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            bcid:        this.getProperty("bcid"),       // Barcode type`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            text:        this.getProperty("text"),    // Text to encode`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            scale:       this.getProperty("scale"),               // 3x scaling factor`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            height:      this.getProperty("height"),               // Bar height, in millimeters`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            includetext: true,            // Show human-readable text`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            textxalign:  'center',        // Always good to set this`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`              })`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`              .catch( err => {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                  new sap.m.MessageBox.error('Error on load bwip-js library: ' + err);`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                  this.BusyDialog.close();`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`              }); } ) } else {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(` let canvas = bwipjs.toCanvas('mycanvas', {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            bcid:        this.getProperty("bcid"),       // Barcode type`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            text:        this.getProperty("text"),    // Text to encode`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            scale:       this.getProperty("scale"),               // 3x scaling factor`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            height:      this.getProperty("height"),               // Bar height, in millimeters`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            includetext: true,            // Show human-readable text`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            textxalign:  'center',        // Always good to set this`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`        }); }`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`  },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                renderer: function (oRm, oControl) {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                    oRm.write( "&lt;canvas id='mycanvas' /&gt;");`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`    // The return value is the canvas element`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`                }`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`            });`),abap.operators.concat(new abap.types.String().set(`\n`),new abap.types.String().set(`        });`))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    return r_js;
  }
  async get_js_lib_local() {
    return z2ui5_cl_cc_bwipjs.get_js_lib_local();
  }
  static async get_js_lib_local() {
    let result = new abap.types.String({qualifiedName: "STRING"});
    result.set(new abap.types.String().set(``));
    return result;
  }
  async get_t_barcode_types() {
    return z2ui5_cl_cc_bwipjs.get_t_barcode_types();
  }
  static async get_t_barcode_types() {
    let result = abap.types.TableFactory.construct(new abap.types.Structure({"sym": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-SYM"}), "desc": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-DESC"}), "text": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-TEXT"}), "opts": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-OPTS"})}, "z2ui5_cl_cc_bwipjs=>ty_s_barcode", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_cc_bwipjs=>ty_t_barcode");
    let temp1 = abap.types.TableFactory.construct(new abap.types.Structure({"sym": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-SYM"}), "desc": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-DESC"}), "text": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-TEXT"}), "opts": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-OPTS"})}, "z2ui5_cl_cc_bwipjs=>ty_s_barcode", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_cc_bwipjs=>ty_t_barcode");
    let temp2 = new abap.types.Structure({"sym": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-SYM"}), "desc": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-DESC"}), "text": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-TEXT"}), "opts": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-OPTS"})}, "z2ui5_cl_cc_bwipjs=>ty_s_barcode", undefined, {}, {});
    abap.statements.clear(temp1);
    temp2.get().sym.set(new abap.types.Character(4).set('ean5'));
    temp2.get().desc.set(new abap.types.Character(5).set('EAN-5'));
    temp2.get().text.set(new abap.types.Character(5).set('90200'));
    temp2.get().opts.set(new abap.types.Character(27).set('includetext guardwhitespace'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().sym.set(new abap.types.Character(4).set('ean2'));
    temp2.get().desc.set(new abap.types.Character(5).set('EAN-2'));
    temp2.get().text.set(new abap.types.Character(2).set('05'));
    temp2.get().opts.set(new abap.types.Character(27).set('includetext guardwhitespace'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().sym.set(new abap.types.Character(5).set('ean13'));
    temp2.get().desc.set(new abap.types.Character(6).set('EAN-13'));
    temp2.get().text.set(new abap.types.Character(13).set('9520123456788'));
    temp2.get().opts.set(new abap.types.Character(27).set('includetext guardwhitespace'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().sym.set(new abap.types.Character(4).set('upca'));
    temp2.get().desc.set(new abap.types.Character(5).set('UPC-A'));
    temp2.get().text.set(new abap.types.Character(12).set('012345000058'));
    temp2.get().opts.set(new abap.types.Character(11).set('includetext'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().sym.set(new abap.types.Character(4).set('isbn'));
    temp2.get().desc.set(new abap.types.Character(4).set('ISBN'));
    temp2.get().text.set(new abap.types.Character(23).set('978-1-56581-231-4 90000'));
    temp2.get().opts.set(new abap.types.Character(27).set('includetext guardwhitespace'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().sym.set(new abap.types.Character(6).set('qrcode'));
    temp2.get().desc.set(new abap.types.Character(7).set('QR Code'));
    temp2.get().text.set(new abap.types.Character(18).set('http://goo.gl/0bis'));
    temp2.get().opts.set(new abap.types.Character(9).set('eclevel=M'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    result.set(temp1);
    return result;
  }
}
abap.Classes['Z2UI5_CL_CC_BWIPJS'] = z2ui5_cl_cc_bwipjs;
z2ui5_cl_cc_bwipjs.cv_src = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_cc_bwipjs.cv_src.set(`https://cdnjs.cloudflare.com/ajax/libs/bwip-js/4.1.1/bwip-js-min.js`);
z2ui5_cl_cc_bwipjs.ty_s_barcode = new abap.types.Structure({"sym": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-SYM"}), "desc": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-DESC"}), "text": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-TEXT"}), "opts": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-OPTS"})}, "z2ui5_cl_cc_bwipjs=>ty_s_barcode", undefined, {}, {});
z2ui5_cl_cc_bwipjs.ty_t_barcode = abap.types.TableFactory.construct(new abap.types.Structure({"sym": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-SYM"}), "desc": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-DESC"}), "text": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-TEXT"}), "opts": new abap.types.String({qualifiedName: "Z2UI5_CL_CC_BWIPJS=>TY_S_BARCODE-OPTS"})}, "z2ui5_cl_cc_bwipjs=>ty_s_barcode", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_cc_bwipjs=>ty_t_barcode");
export {z2ui5_cl_cc_bwipjs};
//# sourceMappingURL=z2ui5_cl_cc_bwipjs.clas.mjs.map