const {cx_root} = await import("./cx_root.clas.mjs");
// z2ui5_cl_demo_app_300.clas.abap
class z2ui5_cl_demo_app_300 {
  static INTERNAL_TYPE = 'CLAS';
  static INTERNAL_NAME = 'Z2UI5_CL_DEMO_APP_300';
  static IMPLEMENTED_INTERFACES = ["Z2UI5_IF_APP","IF_SERIALIZABLE_OBJECT"];
  static ATTRIBUTES = {"CHECK_INITIALIZED": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "CLIENT": {"type": () => {return new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});}, "visibility": "O", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_DRAFT": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_APP": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~CHECK_STICKY": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~VERSION": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~ORIGIN": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~AUTHOR": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~LICENSE": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"}};
  static METHODS = {"DISPLAY_VIEW": {"visibility": "O", "parameters": {"CLIENT": {"type": () => {return new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});}, "is_optional": " "}}},
  "ON_EVENT": {"visibility": "O", "parameters": {"CLIENT": {"type": () => {return new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});}, "is_optional": " "}}},
  "Z2UI5_DISPLAY_POPOVER": {"visibility": "O", "parameters": {"ID": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "is_optional": " "}}}};
  constructor() {
    this.me = new abap.types.ABAPObject();
    this.me.set(this);
    this.check_initialized = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
    this.client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});
    this.z2ui5_if_app$version = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$version;
    this.z2ui5_if_app$origin = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$origin;
    this.z2ui5_if_app$author = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$author;
    this.z2ui5_if_app$license = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$license;
    if (this.z2ui5_if_app$id_draft === undefined) this.z2ui5_if_app$id_draft = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$id_app === undefined) this.z2ui5_if_app$id_app = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$check_sticky === undefined) this.z2ui5_if_app$check_sticky = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
  }
  async constructor_(INPUT) {
    if (super.constructor_) { await super.constructor_(INPUT); }
    return this;
  }
  async display_view(INPUT) {
    let client = INPUT?.client;
    if (client?.getQualifiedName === undefined || client.getQualifiedName() !== "Z2UI5_IF_CLIENT") { client = undefined; }
    if (client === undefined) { client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"}).set(INPUT.client); }
    let page_01 = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let temp1 = new abap.types.Character(1, {"qualifiedName":"XSDBOOLEAN","ddicName":"XSDBOOLEAN"});
    temp1.set(abap.builtin.boolc(abap.compare.initial(((await client.get().z2ui5_if_client$get())).get().s_draft.get().id_prev_app_stack) === false));
    page_01.set((await (await (await abap.Classes['Z2UI5_CL_XML_VIEW'].factory()).get().shell()).get().page({title: new abap.types.String().set(`abap2UI5 - Sample: Object Status`), navbuttonpress: (await client.get().z2ui5_if_client$_event({val: new abap.types.Character(4).set('BACK')})), shownavbutton: temp1})));
    await (await page_01.get().header_content()).get().button({id: new abap.types.String().set(`button_hint_id`), icon: new abap.types.String().set(`sap-icon://hint`), tooltip: new abap.types.String().set(`Sample information`), press: (await client.get().z2ui5_if_client$_event({val: new abap.types.Character(15).set('CLICK_HINT_ICON')}))});
    await (await page_01.get().header_content()).get().link({text: new abap.types.Character(12).set('UI5 Demo Kit'), target: new abap.types.Character(6).set('_blank'), href: new abap.types.Character(97).set('https://sapui5.hana.ondemand.com/sdk/#/entity/sap.m.ObjectStatus/sample/sap.m.sample.ObjectStatus')});
    await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await page_01.get().vertical_layout({width: new abap.types.String().set(`100%`)})).get().block_layout({background: new abap.types.String().set(`transparent`)})).get().block_layout_row()).get().block_layout_cell()).get().vertical_layout({class: new abap.types.String().set(`sapUiContentPadding`), width: new abap.types.String().set(`100%`)})).get().label({text: new abap.types.String().set(`ObjectStatus with different value states`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginTop`)})).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Unknown`), state: new abap.types.String().set(`None`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Currently closed`), icon: new abap.types.String().set(`sap-icon://information`), state: new abap.types.String().set(`Information`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Shipped`), icon: new abap.types.String().set(`sap-icon://sys-enter-2`), state: new abap.types.String().set(`Success`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Missing`), icon: new abap.types.String().set(`sap-icon://alert`), state: new abap.types.String().set(`Warning`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Damaged`), icon: new abap.types.String().set(`sap-icon://error`), state: new abap.types.String().set(`Error`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Damaged`), state: new abap.types.String().set(`Error`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), title: new abap.types.String().set(`Product status`), text: new abap.types.String().set(`Damaged`), active: abap.builtin.abap_true, state: new abap.types.String().set(`Error`), press: (await client.get().z2ui5_if_client$_event({val: new abap.types.String().set(`handleStatusPressed`)})), icon: new abap.types.String().set(`sap-icon://error`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), title: new abap.types.String().set(`Test`), active: abap.builtin.abap_true, state: new abap.types.String().set(`Error`), icon: new abap.types.String().set(`sap-icon://error`)})).get().get_parent()).get().get_parent()).get().get_parent()).get().block_layout_cell()).get().vertical_layout({class: new abap.types.String().set(`sapUiContentPadding`), width: new abap.types.String().set(`100%`)})).get().label({text: new abap.types.String().set(`Inverted ObjectStatus with different value states.`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginTop`)})).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Unknown`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`None`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Currently closed (click)`), inverted: abap.builtin.abap_true, active: abap.builtin.abap_true, icon: new abap.types.String().set(`sap-icon://information`), state: new abap.types.String().set(`Information`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Shipped`), inverted: abap.builtin.abap_true, icon: new abap.types.String().set(`sap-icon://sys-enter-2`), state: new abap.types.String().set(`Success`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Missing`), inverted: abap.builtin.abap_true, icon: new abap.types.String().set(`sap-icon://alert`), state: new abap.types.String().set(`Warning`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Product Damaged`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Error`), icon: new abap.types.String().set(`sap-icon://error`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Error`), icon: new abap.types.String().set(`sap-icon://error`)})).get().get_parent()).get().get_parent()).get().get_parent()).get().get_parent()).get().get_parent();
    await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await page_01.get().vertical_layout({class: new abap.types.String().set(`sapUiContentPadding`), width: new abap.types.String().set(`100%`)})).get().block_layout({background: new abap.types.String().set(`transparent`)})).get().block_layout_row()).get().block_layout_cell()).get().label({text: new abap.types.String().set(`ObjectStatus with different indication states.`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginBottom`)})).get().vertical_layout({width: new abap.types.String().set(`100%`)})).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 1`), state: new abap.types.String().set(`Indication01`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 2`), state: new abap.types.String().set(`Indication02`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 3`), state: new abap.types.String().set(`Indication03`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 4 active`), active: abap.builtin.abap_true, state: new abap.types.String().set(`Indication04`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 5`), state: new abap.types.String().set(`Indication05`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 6`), state: new abap.types.String().set(`Indication06`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 7`), state: new abap.types.String().set(`Indication07`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Indication 8`), state: new abap.types.String().set(`Indication08`)})).get().get_parent()).get().get_parent()).get().get_parent()).get().block_layout_cell()).get().label({text: new abap.types.String().set(`Inverted ObjectStatus with different indication states.`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginBottom`)})).get().vertical_layout({width: new abap.types.String().set(`100%`)})).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication1`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication01`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication2`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication02`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication3 active`), inverted: abap.builtin.abap_true, active: abap.builtin.abap_true, state: new abap.types.String().set(`Indication03`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication4`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication04`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication5 active`), inverted: abap.builtin.abap_true, active: abap.builtin.abap_true, state: new abap.types.String().set(`Indication05`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication6 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, icon: new abap.types.String().set(`sap-icon://attachment`), state: new abap.types.String().set(`Indication06`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication7 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication07`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication8 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication08`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication9 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication09`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication10`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication10`)})).get().get_parent()).get().get_parent()).get().get_parent()).get().block_layout_cell()).get().vertical_layout({width: new abap.types.String().set(`100%`)})).get().label({text: new abap.types.String().set(`Inverted ObjectStatus with different indication states.`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginBottom`)})).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication11`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication11`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication12 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication12`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication13 active`), inverted: abap.builtin.abap_true, active: abap.builtin.abap_true, state: new abap.types.String().set(`Indication13`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication14 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, icon: new abap.types.String().set(`sap-icon://notes`), state: new abap.types.String().set(`Indication14`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication15 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication15`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication16`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication16`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication17 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication17`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication18`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication18`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication19 active`), active: abap.builtin.abap_true, inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication19`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapUiSmallMarginBottom`), text: new abap.types.String().set(`Inverted Indication20`), inverted: abap.builtin.abap_true, state: new abap.types.String().set(`Indication20`)})).get().get_parent()).get().get_parent()).get().get_parent()).get().get_parent()).get().get_parent();
    await (await (await (await (await (await page_01.get().vertical_layout({class: new abap.types.String().set(`sapUiContentPadding`), width: new abap.types.String().set(`100%`)})).get().label({text: new abap.types.String().set(`ObjectStatus with style sapMObjectStatusLarge applied`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginTop`)})).get().object_status({class: new abap.types.String().set(`sapMObjectStatusLarge`), title: new abap.types.String().set(`Product status`), text: new abap.types.String().set(`Shipped`), state: new abap.types.String().set(`Success`), icon: new abap.types.String().set(`sap-icon://sys-enter-2`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapMObjectStatusLarge`), text: new abap.types.String().set(`Shipped`), state: new abap.types.String().set(`Success`), inverted: abap.builtin.abap_true, icon: new abap.types.String().set(`sap-icon://sys-enter-2`)})).get().get_parent();
    await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await (await page_01.get().vertical_layout({class: new abap.types.String().set(`sapUiContentPadding`), width: new abap.types.String().set(`100%`)})).get().label({text: new abap.types.String().set(`ObjectStatus with and without sapMObjectStatusLongText CSS class`), design: new abap.types.String().set(`Bold`), wrapping: abap.builtin.abap_true, class: new abap.types.String().set(`sapUiSmallMarginTop`)})).get().table()).get().columns()).get().column()).get().text({text: new abap.types.String().set(`ObjectStatus with default text wrapping`)})).get().get_parent()).get().column()).get().text({text: new abap.types.String().set(`ObjectStatus with enhanced text wrapping via 'sapMObjectStatusLongText' CSS class`)})).get().get_parent()).get().get_parent()).get().column_list_item()).get().cells()).get().object_status({class: new abap.types.String().set(``), title: new abap.types.String().set(`Product status`), text: new abap.types.String().set(`VeryLongTextToDemonstrateWrappingVeryLongTextToDemonstrateWrappingVeryLongTextToDemonstrateWrappingVeryLongTextToDemonstrateWrapping`)})).get().get_parent()).get().object_status({class: new abap.types.String().set(`sapMObjectStatusLongText`), title: new abap.types.String().set(`Product status`), text: new abap.types.String().set(`VeryLongTextToDemonstrateWrappingVeryLongTextToDemonstrateWrappingVeryLongTextToDemonstrateWrappingVeryLongTextToDemonstrateWrapping`)})).get().get_parent()).get().get_parent()).get().get_parent()).get().get_parent();
    await client.get().z2ui5_if_client$view_display({val: (await page_01.get().stringify())});
  }
  async on_event(INPUT) {
    let client = INPUT?.client;
    if (client?.getQualifiedName === undefined || client.getQualifiedName() !== "Z2UI5_IF_CLIENT") { client = undefined; }
    if (client === undefined) { client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"}).set(INPUT.client); }
    let temp1 = abap.types.TableFactory.construct(new abap.types.String({qualifiedName: "STRING"}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"isUnique":false,"type":"STANDARD","keyFields":[],"name":"primary_key"},"secondary":[]}, "STRING_TABLE");
    let unique597 = ((await client.get().z2ui5_if_client$get())).get().event;
    if (abap.compare.eq(unique597, new abap.types.Character(4).set('BACK'))) {
      await client.get().z2ui5_if_client$nav_app_leave();
    } else if (abap.compare.eq(unique597, new abap.types.Character(15).set('CLICK_HINT_ICON'))) {
      await this.z2ui5_display_popover({id: new abap.types.String().set(`button_hint_id`)});
    } else if (abap.compare.eq(unique597, new abap.types.Character(19).set('handleStatusPressed'))) {
      abap.statements.clear(temp1);
      abap.statements.insertInternal({data: new abap.types.String().set(`OK `), table: temp1});
      await client.get().z2ui5_if_client$message_box_display({title: new abap.types.String().set(`Error description`), type: new abap.types.String().set(``), text: new abap.types.String().set(`Product was damaged along transportation.`), actions: temp1});
    }
  }
  async z2ui5_display_popover(INPUT) {
    let id = INPUT?.id;
    if (id?.getQualifiedName === undefined || id.getQualifiedName() !== "STRING") { id = undefined; }
    if (id === undefined) { id = new abap.types.String({qualifiedName: "STRING"}).set(INPUT.id); }
    let view = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    view.set((await abap.Classes['Z2UI5_CL_XML_VIEW'].factory_popup()));
    await (await view.get().quick_view({placement: new abap.types.String().set(`Bottom`), width: new abap.types.String().set(`auto`)})).get().quick_view_page({pageid: new abap.types.String().set(`sampleInformationId`), header: new abap.types.String().set(`Sample information`), description: new abap.types.String().set(`The object status is a small building block representing a status with a semantic color.`)});
    await this.client.get().z2ui5_if_client$popover_display({xml: (await view.get().stringify()), by_id: id});
  }
  async z2ui5_if_app$main(INPUT) {
    let client = INPUT?.client;
    if (client?.getQualifiedName === undefined || client.getQualifiedName() !== "Z2UI5_IF_CLIENT") { client = undefined; }
    if (client === undefined) { client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"}).set(INPUT.client); }
    this.me.get().client.set(client);
    if (abap.compare.eq(this.check_initialized, abap.builtin.abap_false)) {
      this.check_initialized.set(abap.builtin.abap_true);
      await this.display_view({client: client});
    }
    await this.on_event({client: client});
  }
}
abap.Classes['Z2UI5_CL_DEMO_APP_300'] = z2ui5_cl_demo_app_300;
z2ui5_cl_demo_app_300.z2ui5_if_app$version = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_300.z2ui5_if_app$version.set('1.135.0');
z2ui5_cl_demo_app_300.z2ui5_if_app$origin = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_300.z2ui5_if_app$origin.set('https://github.com/abap2UI5/abap2UI5');
z2ui5_cl_demo_app_300.z2ui5_if_app$author = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_300.z2ui5_if_app$author.set('https://github.com/oblomov-dev');
z2ui5_cl_demo_app_300.z2ui5_if_app$license = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_300.z2ui5_if_app$license.set('MIT');
export {z2ui5_cl_demo_app_300};
//# sourceMappingURL=z2ui5_cl_demo_app_300.clas.mjs.map