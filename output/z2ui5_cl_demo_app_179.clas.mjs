const {cx_root} = await import("./cx_root.clas.mjs");
// z2ui5_cl_demo_app_179.clas.abap
class z2ui5_cl_demo_app_179 {
  static INTERNAL_TYPE = 'CLAS';
  static INTERNAL_NAME = 'Z2UI5_CL_DEMO_APP_179';
  static IMPLEMENTED_INTERFACES = ["Z2UI5_IF_APP","IF_SERIALIZABLE_OBJECT"];
  static ATTRIBUTES = {"ZOOMLEVEL": {"type": () => {return new abap.types.Integer({qualifiedName: "I"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "MT_DATA": {"type": () => {return abap.types.TableFactory.construct(new abap.types.Structure({"objectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-OBJECTID"}), "relationid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONID"}), "parentobjectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PARENTOBJECTID"}), "predectaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PREDECTASKID"}), "succtaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SUCCTASKID"}), "relationtype": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONTYPE"}), "shapetypestart": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPESTART"}), "shapetypeend": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPEEND"}), "starttime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-STARTTIME"}), "endtime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-ENDTIME"})}, "z2ui5_cl_demo_app_179=>ty_s_data", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_demo_app_179=>temp1_6cd5a9d875");}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "CLIENT": {"type": () => {return new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});}, "visibility": "O", "is_constant": " ", "is_class": " "},
  "CHECK_INITIALIZED": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "O", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_DRAFT": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_APP": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~CHECK_STICKY": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~VERSION": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~ORIGIN": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~AUTHOR": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~LICENSE": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"}};
  static METHODS = {"SET_VIEW": {"visibility": "O", "parameters": {}},
  "Z2UI5_ON_EVENT": {"visibility": "O", "parameters": {}},
  "SET_MOCK_DATA": {"visibility": "O", "parameters": {}}};
  constructor() {
    this.me = new abap.types.ABAPObject();
    this.me.set(this);
    this.zoomlevel = new abap.types.Integer({qualifiedName: "I"});
    this.mt_data = abap.types.TableFactory.construct(new abap.types.Structure({"objectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-OBJECTID"}), "relationid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONID"}), "parentobjectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PARENTOBJECTID"}), "predectaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PREDECTASKID"}), "succtaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SUCCTASKID"}), "relationtype": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONTYPE"}), "shapetypestart": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPESTART"}), "shapetypeend": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPEEND"}), "starttime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-STARTTIME"}), "endtime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-ENDTIME"})}, "z2ui5_cl_demo_app_179=>ty_s_data", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_demo_app_179=>temp1_6cd5a9d875");
    this.client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});
    this.check_initialized = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
    this.z2ui5_if_app$version = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$version;
    this.z2ui5_if_app$origin = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$origin;
    this.z2ui5_if_app$author = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$author;
    this.z2ui5_if_app$license = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$license;
    if (this.z2ui5_if_app$id_draft === undefined) this.z2ui5_if_app$id_draft = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$id_app === undefined) this.z2ui5_if_app$id_app = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$check_sticky === undefined) this.z2ui5_if_app$check_sticky = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
  }
  async constructor_(INPUT) {
    if (super.constructor_) { await super.constructor_(INPUT); }
    return this;
  }
  async set_mock_data() {
    let lv_mock = new abap.types.String({qualifiedName: "STRING"});
    lv_mock.set(abap.operators.concat(new abap.types.String().set(`[`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-0-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-0",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-1-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-1-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-1-2",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "StartToFinish",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeStart":"VerticalRectangle",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeEnd":"Diamond",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-1-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-2-2",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-2-2",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-2-3",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "FinishToFinish",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeStart":"Square",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeEnd":"Diamond",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   },  `),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-2-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-2",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-2-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-2-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-2-4",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "StartToStart",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "enableCurvedEdge":true,`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   `),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-3-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-3",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-2-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-2-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-2-3",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "FinishToFinish",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeStart":"Diamond",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeEnd":"Circle",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   `),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-4-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-4",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-2",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "StartToFinish",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeStart":"Circle",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "shapeTypeEnd":"Diamond",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "startShapeColor":"white",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "endShapeColor":"green",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "selectedStartShapeColor":"blue",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "selectedEndShapeColor":"yellow",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "enableCurvedEdge":true,`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-5-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-5",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-2-4",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-2-4",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-2-5",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "FinishToStart",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "lShapeForTypeFS":false,`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   },`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   {`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ObjectID": "rls-6-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationID": "rls-6",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "ParentObjectID": "object-0-3",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "PredecTaskID": "object-0-3",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "SuccTaskID": "object-0-3-1",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "RelationType": "FinishToStart",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "StartTime":"2018-11-01T09:00:00",`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`       "EndTime":"2018-11-27T09:00:00"`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`   }`),abap.operators.concat(new abap.types.String().set(`\n`),new abap.types.String().set(`]`))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    await abap.Classes['Z2UI5_CL_UTIL'].json_parse({val: lv_mock, data: this.mt_data});
  }
  async set_view() {
    let view = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let temp1 = new abap.types.Structure({"n": new abap.types.String({qualifiedName: "Z2UI5_IF_TYPES=>TY_S_NAME_VALUE-N"}), "v": new abap.types.String({qualifiedName: "Z2UI5_IF_TYPES=>TY_S_NAME_VALUE-V"})}, "z2ui5_if_types=>ty_s_name_value", undefined, {}, {});
    let page = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let temp2 = new abap.types.Character(1, {"qualifiedName":"XSDBOOLEAN","ddicName":"XSDBOOLEAN"});
    let cont = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let tool = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let gantt_container = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let gantt = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let table = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let row_settings = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let shapes = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let relas = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let columns = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let column = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    view.set((await abap.Classes['Z2UI5_CL_XML_VIEW'].factory()));
    abap.statements.clear(temp1);
    temp1.get().n.set(new abap.types.String().set(`core:require`));
    temp1.get().v.set(new abap.types.String().set(`{Helper:'z2ui5/Util'}`));
    await view.get()._generic_property({val: temp1});
    temp2.set(abap.builtin.boolc(abap.compare.initial(((await this.client.get().z2ui5_if_client$get())).get().s_draft.get().id_prev_app_stack) === false));
    page.set((await view.get().page({id: new abap.types.String().set(`page_main`), title: new abap.types.Character(16).set('abap2UI5 - Gantt'), navbuttonpress: (await this.client.get().z2ui5_if_client$_event({val: new abap.types.Character(4).set('BACK')})), shownavbutton: temp2, class: new abap.types.Character(19).set('sapUiContentPadding')})));
    cont.set((await page.get().scroll_container({horizontal: abap.builtin.abap_true})));
    tool.set((await cont.get().container_toolbar({showsearchbutton: abap.builtin.abap_true, showdisplaytypebutton: abap.builtin.abap_true, showlegendbutton: abap.builtin.abap_true, showsettingbutton: abap.builtin.abap_true, showtimezoomcontrol: abap.builtin.abap_true})));
    gantt_container.set((await cont.get().gantt_chart_container()));
    gantt.set((await gantt_container.get().gantt_chart_with_table({id: new abap.types.String().set(`gantt`), shapeselectionmode: new abap.types.String().set(`Single`), isconnectordetailsvisible: abap.builtin.abap_true})));
    table.set((await (await gantt.get().gantt_table()).get().tree_table({rows: abap.operators.concat(new abap.types.String().set(`{path: '`),abap.operators.concat((await this.client.get().z2ui5_if_client$_bind({val: this.mt_data, path: abap.builtin.abap_true})),abap.operators.concat(new abap.types.String().set(`',     parameters: {`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`           operationMode: 'Server',`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`           numberOfExpandedLevels: 2,`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`           treeAnnotationProperties: {`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`                 hierarchyNodeFor:                'OBJECTID',`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`                 hierarchyParentNodeFor:          'PARENTOBJECTID',`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`                 hierarchyLevelFor:               'HierarchyNodeLevel',`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`                 hierarchyDrillStateFor:          'DrillDownState',`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`                 hierarchyNodeDescendantCountFor: 'Magnitude'`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`             },`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`          expand: 'Relationships'`),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.String().set(`     }`),abap.operators.concat(new abap.types.String().set(`\r\n`),new abap.types.String().set(`}`)))))))))))))))))))))))))))})));
    row_settings.set((await (await table.get().row_settings_template()).get().gantt_row_settings({rowid: new abap.types.String().set(`{OBJECTID}`), relationships: new abap.types.String().set(`{path:'Relationships', templateShareable: 'true'}`)})));
    shapes.set((await row_settings.get().shapes1()));
    await shapes.get().base_rectangle({shapeid: new abap.types.String().set(`{OBJECTID}`), time: new abap.types.String().set(`{= Helper.DateCreateObject(\${STARTTIME}) }`), endtime: new abap.types.String().set(`{= Helper.DateCreateObject(\${ENDTIME}) }`), height: new abap.types.String().set(`19`), title: new abap.types.String().set(`{OBJECTNAME}`), connectable: abap.builtin.abap_true, horizontaltextalignment: new abap.types.String().set(`Start`)});
    relas.set((await row_settings.get().relationships()));
    await relas.get().relationship({shapeid: new abap.types.String().set(`{RELATIONID}`), type: new abap.types.String().set(`{RELATIONTYPE}`), successor: new abap.types.String().set(`{SUCCTASKID}`), predecessor: new abap.types.String().set(`{PREDECTASKID}`)});
    columns.set((await table.get().ui_columns()));
    column.set((await columns.get().ui_column({id: new abap.types.Character(10).set('OBJECTNAME')})));
    await (await column.get().ui_custom_data()).get().core_custom_data({key: new abap.types.Character(23).set('exportTableColumnConfig'), value: abap.operators.concat(new abap.types.Character(27).set('{"columnKey": "OBJECTNAME",'),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.Character(35).set('    "leadingProperty":"OBJECTNAME",'),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.Character(25).set('    "dataType": "string",'),abap.operators.concat(new abap.types.String().set(`\r\n`),abap.operators.concat(new abap.types.Character(47).set('    "hierarchyNodeLevel": "HierarchyNodeLevel",'),abap.operators.concat(new abap.types.String().set(`\r\n`),new abap.types.Character(17).set('    "wrap": true}')))))))))});
    await column.get().text({text: new abap.types.String().set(`Object Name`)});
    await (await column.get().tree_template()).get().label({text: new abap.types.String().set(`{OBJECTNAME}`)});
    await (await (await (await (await (await (await (await gantt.get().axis_time_strategy()).get().proportion_zoom_strategy()).get().total_horizon()).get().time_horizon({starttime: new abap.types.String().set(`20181101000000`), endtime: new abap.types.String().set(`20181131000000`)})).get().get_parent()).get().get_parent()).get().visible_horizon()).get().time_horizon({starttime: new abap.types.String().set(`20181101000000`), endtime: new abap.types.String().set(`20181131000000`)});
    await this.client.get().z2ui5_if_client$view_display({val: (await view.get().stringify())});
  }
  async z2ui5_if_app$main(INPUT) {
    let client = INPUT?.client;
    if (client?.getQualifiedName === undefined || client.getQualifiedName() !== "Z2UI5_IF_CLIENT") { client = undefined; }
    if (client === undefined) { client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"}).set(INPUT.client); }
    this.me.get().client.set(client);
    if (abap.compare.eq(this.check_initialized, abap.builtin.abap_false)) {
      this.check_initialized.set(abap.builtin.abap_true);
      await this.set_mock_data();
      await this.set_view();
      return;
    }
    await this.z2ui5_on_event();
  }
  async z2ui5_on_event() {
    let unique439 = ((await this.client.get().z2ui5_if_client$get())).get().event;
    if (abap.compare.eq(unique439, new abap.types.Character(4).set('BACK'))) {
      await this.client.get().z2ui5_if_client$nav_app_leave();
    }
  }
}
abap.Classes['Z2UI5_CL_DEMO_APP_179'] = z2ui5_cl_demo_app_179;
z2ui5_cl_demo_app_179.z2ui5_if_app$version = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_179.z2ui5_if_app$version.set('1.135.0');
z2ui5_cl_demo_app_179.z2ui5_if_app$origin = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_179.z2ui5_if_app$origin.set('https://github.com/abap2UI5/abap2UI5');
z2ui5_cl_demo_app_179.z2ui5_if_app$author = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_179.z2ui5_if_app$author.set('https://github.com/oblomov-dev');
z2ui5_cl_demo_app_179.z2ui5_if_app$license = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_179.z2ui5_if_app$license.set('MIT');
z2ui5_cl_demo_app_179.ty_s_data = new abap.types.Structure({"objectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-OBJECTID"}), "relationid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONID"}), "parentobjectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PARENTOBJECTID"}), "predectaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PREDECTASKID"}), "succtaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SUCCTASKID"}), "relationtype": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONTYPE"}), "shapetypestart": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPESTART"}), "shapetypeend": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPEEND"}), "starttime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-STARTTIME"}), "endtime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-ENDTIME"})}, "z2ui5_cl_demo_app_179=>ty_s_data", undefined, {}, {});
z2ui5_cl_demo_app_179.temp1_6cd5a9d875 = abap.types.TableFactory.construct(new abap.types.Structure({"objectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-OBJECTID"}), "relationid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONID"}), "parentobjectid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PARENTOBJECTID"}), "predectaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-PREDECTASKID"}), "succtaskid": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SUCCTASKID"}), "relationtype": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-RELATIONTYPE"}), "shapetypestart": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPESTART"}), "shapetypeend": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-SHAPETYPEEND"}), "starttime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-STARTTIME"}), "endtime": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_179=>TY_S_DATA-ENDTIME"})}, "z2ui5_cl_demo_app_179=>ty_s_data", undefined, {}, {}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_demo_app_179=>temp1_6cd5a9d875");
export {z2ui5_cl_demo_app_179};
//# sourceMappingURL=z2ui5_cl_demo_app_179.clas.mjs.map