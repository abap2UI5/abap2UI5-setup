const {cx_root} = await import("./cx_root.clas.mjs");
// z2ui5_cl_demo_app_160.clas.abap
class z2ui5_cl_demo_app_160 {
  static INTERNAL_TYPE = 'CLAS';
  static INTERNAL_NAME = 'Z2UI5_CL_DEMO_APP_160';
  static IMPLEMENTED_INTERFACES = ["Z2UI5_IF_APP","IF_SERIALIZABLE_OBJECT"];
  static ATTRIBUTES = {"CHECK_INITIALIZED": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "MT_OUTPUT": {"type": () => {return abap.types.TableFactory.construct(new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_demo_app_160=>temp1_d2eb35b09b");}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "CLIENT": {"type": () => {return new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_DRAFT": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_APP": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~CHECK_STICKY": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~VERSION": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~ORIGIN": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~AUTHOR": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~LICENSE": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"}};
  static METHODS = {"LOAD_OUTPUT_TABLE": {"visibility": "O", "parameters": {}},
  "ON_EVENT": {"visibility": "O", "parameters": {}},
  "RENDER_MAIN_SCREEN": {"visibility": "O", "parameters": {}}};
  constructor() {
    this.me = new abap.types.ABAPObject();
    this.me.set(this);
    this.check_initialized = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
    this.mt_output = abap.types.TableFactory.construct(new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_demo_app_160=>temp1_d2eb35b09b");
    this.client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});
    this.z2ui5_if_app$version = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$version;
    this.z2ui5_if_app$origin = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$origin;
    this.z2ui5_if_app$author = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$author;
    this.z2ui5_if_app$license = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$license;
    if (this.z2ui5_if_app$id_draft === undefined) this.z2ui5_if_app$id_draft = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$id_app === undefined) this.z2ui5_if_app$id_app = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$check_sticky === undefined) this.z2ui5_if_app$check_sticky = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
  }
  async constructor_(INPUT) {
    if (super.constructor_) { await super.constructor_(INPUT); }
    return this;
  }
  async load_output_table() {
    let ls_output = new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {});
    abap.statements.clear(this.mt_output);
    const indexBackup1 = abap.builtin.sy.get().index.get();
    const unique415 = abap.IntegerFactory.get(10).get();
    for (let unique416 = 0; unique416 < unique415; unique416++) {
      abap.builtin.sy.get().index.set(unique416 + 1);
      ls_output.get().index.set(abap.builtin.sy.get().index);
      ls_output.get().set_sk.set(new abap.types.Character(4).set('Test'));
      ls_output.get().matnr.set(new abap.types.Character(7).set('1234567'));
      ls_output.get().description.set(new abap.types.Character(4).set('Test'));
      ls_output.get().pl_01.set(abap.IntegerFactory.get(0));
      ls_output.get().pl_02.set(abap.IntegerFactory.get(0));
      abap.statements.append({source: ls_output, target: this.mt_output});
    }
    abap.builtin.sy.get().index.set(indexBackup1);
  }
  async on_event() {
    let lt_event_arguments = abap.types.TableFactory.construct(new abap.types.String({qualifiedName: "STRING"}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"isUnique":false,"type":"STANDARD","keyFields":[],"name":"primary_key"},"secondary":[]}, "STRING_TABLE");
    let lv_id_event = new abap.types.String({qualifiedName: "STRING"});
    let temp1 = new abap.types.String({qualifiedName: "STRING"});
    let temp2 = new abap.types.Integer({qualifiedName: "I"});
    let lv_tab_index = new abap.types.String({qualifiedName: "STRING"});
    let temp3 = new abap.types.String({qualifiedName: "STRING"});
    let temp4 = new abap.types.Integer({qualifiedName: "I"});
    let ls_row_submit = new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {});
    let temp5 = new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {});
    let temp6 = new abap.types.Integer({qualifiedName: "I"});
    let lv_id_parent = new abap.types.String({qualifiedName: "STRING"});
    let temp7 = new abap.types.String({qualifiedName: "STRING"});
    let temp8 = new abap.types.Integer({qualifiedName: "I"});
    let unique417 = ((await this.client.get().z2ui5_if_client$get())).get().event;
    if (abap.compare.eq(unique417, new abap.types.Character(15).set('PL_TOTAL_CHANGE'))) {
      lt_event_arguments.set(((await this.client.get().z2ui5_if_client$get())).get().t_event_arg);
      temp2.set(abap.builtin.sy.get().tabix);
      abap.statements.readTable(lt_event_arguments,{index: abap.IntegerFactory.get(1),
        into: temp1});
      abap.builtin.sy.get().tabix.set(temp2);
      if (abap.compare.ne(abap.builtin.sy.get().subrc, abap.IntegerFactory.get(0))) {
        abap.statements.assert(abap.compare.eq(abap.IntegerFactory.get(1), abap.IntegerFactory.get(0)));
      }
      lv_id_event.set(temp1);
      temp4.set(abap.builtin.sy.get().tabix);
      abap.statements.readTable(lt_event_arguments,{index: abap.IntegerFactory.get(2),
        into: temp3});
      abap.builtin.sy.get().tabix.set(temp4);
      if (abap.compare.ne(abap.builtin.sy.get().subrc, abap.IntegerFactory.get(0))) {
        abap.statements.assert(abap.compare.eq(abap.IntegerFactory.get(1), abap.IntegerFactory.get(0)));
      }
      lv_tab_index.set(temp3);
      temp6.set(abap.builtin.sy.get().tabix);
      abap.statements.readTable(this.mt_output,{index: lv_tab_index,
        into: temp5});
      abap.builtin.sy.get().tabix.set(temp6);
      if (abap.compare.ne(abap.builtin.sy.get().subrc, abap.IntegerFactory.get(0))) {
        abap.statements.assert(abap.compare.eq(abap.IntegerFactory.get(1), abap.IntegerFactory.get(0)));
      }
      ls_row_submit.set(temp5);
      temp8.set(abap.builtin.sy.get().tabix);
      abap.statements.readTable(lt_event_arguments,{index: abap.IntegerFactory.get(3),
        into: temp7});
      abap.builtin.sy.get().tabix.set(temp8);
      if (abap.compare.ne(abap.builtin.sy.get().subrc, abap.IntegerFactory.get(0))) {
        abap.statements.assert(abap.compare.eq(abap.IntegerFactory.get(1), abap.IntegerFactory.get(0)));
      }
      lv_id_parent.set(temp7);
      await this.client.get().z2ui5_if_client$message_box_display({text: abap.operators.concat(lv_tab_index,abap.operators.concat(lv_id_event,lv_id_parent))});
    } else if (abap.compare.eq(unique417, new abap.types.Character(4).set('BACK'))) {
      await this.client.get().z2ui5_if_client$nav_app_leave();
    }
    await this.client.get().z2ui5_if_client$view_model_update();
  }
  async render_main_screen() {
    let view = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let page = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let temp2 = new abap.types.Character(1, {"qualifiedName":"XSDBOOLEAN","ddicName":"XSDBOOLEAN"});
    let table = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let columns = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let temp1 = abap.types.TableFactory.construct(new abap.types.String({qualifiedName: "STRING"}), {"withHeader":false,"keyType":"DEFAULT","primaryKey":{"isUnique":false,"type":"STANDARD","keyFields":[],"name":"primary_key"},"secondary":[]}, "STRING_TABLE");
    view.set((await abap.Classes['Z2UI5_CL_XML_VIEW'].factory()));
    temp2.set(abap.builtin.boolc(abap.compare.initial(((await this.client.get().z2ui5_if_client$get())).get().s_draft.get().id_prev_app_stack) === false));
    page.set((await (await (await (await (await view.get().shell()).get().page({title: new abap.types.Character(30).set('abap2UI5 - Event on cell level'), navbuttonpress: (await this.client.get().z2ui5_if_client$_event({val: new abap.types.Character(4).set('BACK')})), shownavbutton: temp2})).get().header_content()).get().link()).get().get_parent()));
    table.set((await (await page.get().flex_box({height: new abap.types.Character(4).set('85vh')})).get().ui_table({alternaterowcolors: new abap.types.Character(4).set('true'), visiblerowcountmode: new abap.types.Character(4).set('Auto'), fixedrowcount: new abap.types.Character(1).set('1'), selectionmode: new abap.types.Character(4).set('None'), rows: (await this.client.get().z2ui5_if_client$_bind_edit({val: this.mt_output}))})));
    columns.set((await table.get().ui_columns()));
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(6).set('5.2rem'), sortproperty: new abap.types.Character(6).set('SET_SK'), filterproperty: new abap.types.Character(6).set('SET_SK')})).get().text({text: new abap.types.Character(8).set('Column 1')})).get().ui_template()).get().text({text: new abap.types.String().set(`{SET_SK}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(5).set('MATNR'), filterproperty: new abap.types.Character(5).set('MATNR')})).get().text({text: new abap.types.Character(8).set('Column 2')})).get().ui_template()).get().text({text: new abap.types.String().set(`{MATNR}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(5).set('20rem'), sortproperty: new abap.types.Character(11).set('DESCRIPTION'), filterproperty: new abap.types.Character(11).set('DESCRIPTION')})).get().text({text: new abap.types.Character(8).set('Column 3')})).get().ui_template()).get().text({text: new abap.types.String().set(`{DESCRIPTION}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(8).set('IS_TOTAL'), filterproperty: new abap.types.Character(8).set('IS_TOTAL')})).get().text({text: new abap.types.Character(8).set('Column 4')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_TOTAL}`)});
    abap.statements.clear(temp1);
    abap.statements.insertInternal({data: new abap.types.String().set(`\${$source>/id}`), table: temp1});
    abap.statements.insertInternal({data: new abap.types.String().set(`\${INDEX}`), table: temp1});
    abap.statements.insertInternal({data: new abap.types.String().set(`$event.oSource.oParent.sId`), table: temp1});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(8).set('PL_TOTAL'), filterproperty: new abap.types.Character(8).set('PL_TOTAL')})).get().text({text: new abap.types.Character(8).set('Column 5')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_TOTAL}`), submit: (await this.client.get().z2ui5_if_client$_event({val: new abap.types.Character(15).set('PL_TOTAL_CHANGE'), t_arg: temp1})), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(14).set('per_cent_total'), filterproperty: new abap.types.Character(14).set('per_cent_total')})).get().text({text: new abap.types.Character(8).set('Column 6')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_total} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(10).set('IS_01_PREV'), filterproperty: new abap.types.Character(10).set('IS_01_PREV')})).get().text({text: new abap.types.Character(8).set('Column 7')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_01_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(5).set('PL_01'), filterproperty: new abap.types.Character(5).set('PL_01')})).get().text({text: new abap.types.Character(8).set('Column 8')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_01}`), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(11).set('per_cent_01'), filterproperty: new abap.types.Character(11).set('per_cent_01')})).get().text({text: new abap.types.Character(8).set('Column 9')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_01} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(10).set('IS_02_PREV'), filterproperty: new abap.types.Character(10).set('IS_02_PREV')})).get().text({text: new abap.types.Character(9).set('Column 10')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_02_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(5).set('PL_02'), filterproperty: new abap.types.Character(5).set('PL_02')})).get().text({text: new abap.types.Character(9).set('Column 11')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_02}`), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(11).set('per_cent_02'), filterproperty: new abap.types.Character(11).set('per_cent_02')})).get().text({text: new abap.types.Character(9).set('Column 12')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_02} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(10).set('IS_03_PREV'), filterproperty: new abap.types.Character(10).set('IS_03_PREV')})).get().text({text: new abap.types.Character(9).set('Column 13')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_03_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(5).set('PL_03'), filterproperty: new abap.types.Character(5).set('PL_03')})).get().text({text: new abap.types.Character(9).set('Column 14')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_03}`), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(11).set('per_cent_03'), filterproperty: new abap.types.Character(11).set('per_cent_03')})).get().text({text: new abap.types.Character(9).set('Column 15')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_03} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(11).set('IS_Q01_PREV'), filterproperty: new abap.types.Character(11).set('IS_Q01_PREV')})).get().text({text: new abap.types.Character(9).set('Column 16')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_Q01_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(6).set('PL_Q01'), filterproperty: new abap.types.Character(6).set('PL_Q01')})).get().text({text: new abap.types.Character(9).set('Column 17')})).get().ui_template()).get().text({text: new abap.types.String().set(`{PL_Q01}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(12).set('per_cent_q01'), filterproperty: new abap.types.Character(12).set('per_cent_q01')})).get().text({text: new abap.types.Character(9).set('Column 18')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_q01} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(11).set('IS_Q02_PREV'), filterproperty: new abap.types.Character(11).set('IS_Q02_PREV')})).get().text({text: new abap.types.Character(9).set('Column 19')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_Q02_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(6).set('PL_Q02'), filterproperty: new abap.types.Character(6).set('PL_Q02')})).get().text({text: new abap.types.Character(9).set('Column 20')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_Q02}`), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(12).set('per_cent_q02'), filterproperty: new abap.types.Character(12).set('per_cent_q02')})).get().text({text: new abap.types.Character(9).set('Column 21')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_q02} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(11).set('IS_Q03_PREV'), filterproperty: new abap.types.Character(11).set('IS_Q03_PREV')})).get().text({text: new abap.types.Character(9).set('Column 22')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_Q03_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(6).set('PL_Q03'), filterproperty: new abap.types.Character(6).set('PL_Q03')})).get().text({text: new abap.types.Character(9).set('Column 23')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_Q03}`), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(12).set('per_cent_q03'), filterproperty: new abap.types.Character(12).set('per_cent_q03')})).get().text({text: new abap.types.Character(9).set('Column 24')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_q03} %`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(11).set('IS_Q04_PREV'), filterproperty: new abap.types.Character(11).set('IS_Q04_PREV')})).get().text({text: new abap.types.Character(9).set('Column 25')})).get().ui_template()).get().text({text: new abap.types.String().set(`{IS_Q04_PREV}`)});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('5rem'), sortproperty: new abap.types.Character(6).set('PL_Q04'), filterproperty: new abap.types.Character(6).set('PL_Q04')})).get().text({text: new abap.types.Character(9).set('Column 26')})).get().ui_template()).get().input({value: new abap.types.String().set(`{PL_Q04}`), editable: abap.builtin.abap_true, type: new abap.types.Character(6).set('Number')});
    await (await (await (await columns.get().ui_column({width: new abap.types.Character(4).set('4rem'), sortproperty: new abap.types.Character(12).set('per_cent_q04'), filterproperty: new abap.types.Character(12).set('per_cent_q04')})).get().text({text: new abap.types.Character(9).set('Column 27')})).get().ui_template()).get().text({text: new abap.types.String().set(`{per_cent_q04} %`)});
    await this.client.get().z2ui5_if_client$view_display({val: (await view.get().stringify())});
  }
  async z2ui5_if_app$main(INPUT) {
    let client = INPUT?.client;
    if (client?.getQualifiedName === undefined || client.getQualifiedName() !== "Z2UI5_IF_CLIENT") { client = undefined; }
    if (client === undefined) { client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"}).set(INPUT.client); }
    this.me.get().client.set(client);
    if (abap.compare.eq(this.check_initialized, abap.builtin.abap_false)) {
      this.check_initialized.set(abap.builtin.abap_true);
      await this.load_output_table();
      await this.render_main_screen();
      return;
    }
    await this.on_event();
  }
}
abap.Classes['Z2UI5_CL_DEMO_APP_160'] = z2ui5_cl_demo_app_160;
z2ui5_cl_demo_app_160.z2ui5_if_app$version = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_160.z2ui5_if_app$version.set('1.135.0');
z2ui5_cl_demo_app_160.z2ui5_if_app$origin = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_160.z2ui5_if_app$origin.set('https://github.com/abap2UI5/abap2UI5');
z2ui5_cl_demo_app_160.z2ui5_if_app$author = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_160.z2ui5_if_app$author.set('https://github.com/oblomov-dev');
z2ui5_cl_demo_app_160.z2ui5_if_app$license = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_160.z2ui5_if_app$license.set('MIT');
z2ui5_cl_demo_app_160.s_output = new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {});
z2ui5_cl_demo_app_160.temp1_d2eb35b09b = abap.types.TableFactory.construct(new abap.types.Structure({"index": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-INDEX"}), "set_sk": new abap.types.Character(10, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-set_sk"}), "matnr": new abap.types.Character(40, {"qualifiedName":"MATNR","ddicName":"MATNR"}), "description": new abap.types.Character(50, {"qualifiedName":"z2ui5_cl_demo_app_160=>s_output-description"}), "is_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_TOTAL"}), "pl_total": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_TOTAL"}), "per_cent_total": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_total"}), "is_01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_01_PREV"}), "pl_01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_01"}), "per_cent_01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_01"}), "is_02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_02_PREV"}), "pl_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-pl_02"}), "per_cent_02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_02"}), "is_03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_03_PREV"}), "pl_03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_03"}), "per_cent_03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_03"}), "is_q01_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q01_PREV"}), "pl_q01": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q01"}), "per_cent_q01": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q01"}), "is_q02_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q02_PREV"}), "pl_q02": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q02"}), "per_cent_q02": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q02"}), "is_q03_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q03_PREV"}), "pl_q03": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q03"}), "per_cent_q03": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q03"}), "is_q04_prev": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-IS_Q04_PREV"}), "pl_q04": new abap.types.Integer({qualifiedName: "Z2UI5_CL_DEMO_APP_160=>S_OUTPUT-PL_Q04"}), "per_cent_q04": new abap.types.Packed({length: 2, decimals: 1, qualifiedName: "z2ui5_cl_demo_app_160=>s_output-per_cent_q04"})}, "z2ui5_cl_demo_app_160=>s_output", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "z2ui5_cl_demo_app_160=>temp1_d2eb35b09b");
export {z2ui5_cl_demo_app_160};
//# sourceMappingURL=z2ui5_cl_demo_app_160.clas.mjs.map