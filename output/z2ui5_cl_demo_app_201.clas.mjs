const {cx_root} = await import("./cx_root.clas.mjs");
// z2ui5_cl_demo_app_201.clas.abap
class z2ui5_cl_demo_app_201 {
  static INTERNAL_TYPE = 'CLAS';
  static INTERNAL_NAME = 'Z2UI5_CL_DEMO_APP_201';
  static IMPLEMENTED_INTERFACES = ["IF_SERIALIZABLE_OBJECT","Z2UI5_IF_APP","IF_SERIALIZABLE_OBJECT"];
  static ATTRIBUTES = {"MT_SUGGESTION_OUT": {"type": () => {return abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp1_f1dd69a9b5");}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "MT_SUGGESTION": {"type": () => {return abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp2_f1dd69a9b5");}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "INPUT": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "CLIENT": {"type": () => {return new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});}, "visibility": "O", "is_constant": " ", "is_class": " "},
  "CHECK_INITIALIZED": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "O", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_DRAFT": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~ID_APP": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~CHECK_STICKY": {"type": () => {return new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});}, "visibility": "U", "is_constant": " ", "is_class": " "},
  "Z2UI5_IF_APP~VERSION": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~ORIGIN": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~AUTHOR": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"},
  "Z2UI5_IF_APP~LICENSE": {"type": () => {return new abap.types.String({qualifiedName: "STRING"});}, "visibility": "U", "is_constant": "X", "is_class": "X"}};
  static METHODS = {"Z2UI5_ON_EVENT": {"visibility": "O", "parameters": {}},
  "Z2UI5_VIEW_DISPLAY": {"visibility": "O", "parameters": {}},
  "SET_DATA": {"visibility": "O", "parameters": {}}};
  constructor() {
    this.me = new abap.types.ABAPObject();
    this.me.set(this);
    this.mt_suggestion_out = abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp1_f1dd69a9b5");
    this.mt_suggestion = abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp2_f1dd69a9b5");
    this.input = new abap.types.String({qualifiedName: "STRING"});
    this.client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"});
    this.check_initialized = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
    this.z2ui5_if_app$version = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$version;
    this.z2ui5_if_app$origin = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$origin;
    this.z2ui5_if_app$author = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$author;
    this.z2ui5_if_app$license = abap.Classes['Z2UI5_IF_APP'].z2ui5_if_app$license;
    if (this.z2ui5_if_app$id_draft === undefined) this.z2ui5_if_app$id_draft = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$id_app === undefined) this.z2ui5_if_app$id_app = new abap.types.String({qualifiedName: "STRING"});
    if (this.z2ui5_if_app$check_sticky === undefined) this.z2ui5_if_app$check_sticky = new abap.types.Character(1, {"qualifiedName":"ABAP_BOOL","ddicName":"ABAP_BOOL"});
  }
  async constructor_(INPUT) {
    if (super.constructor_) { await super.constructor_(INPUT); }
    return this;
  }
  async set_data() {
    let temp1 = abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp2_f1dd69a9b5");
    let temp2 = new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {});
    abap.statements.clear(temp1);
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ADP'));
    temp2.get().currencyname.set(new abap.types.Character(33).set('Andorran Peseta --> (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Peseta'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AED'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('United Arab Emirates Dirham'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dirham'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AFA'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Afghani (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Afghani'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AFN'));
    temp2.get().currencyname.set(new abap.types.Character(7).set('Afghani'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Afghani'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ALL'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Albanian Lek'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Lek'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AMD'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Armenian Dram'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Dram'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ANG'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('West Indian Guilder'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('W.Ind.Guilder'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AOA'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('Angolanische Kwanza'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Kwansa'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AON'));
    temp2.get().currencyname.set(new abap.types.Character(24).set('Angolan New Kwanza (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('New Kwanza'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AOR'));
    temp2.get().currencyname.set(new abap.types.Character(31).set('Angolan Kwanza Reajustado (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Kwanza Reajust.'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ARS'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Argentine Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('Arg. Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ATS'));
    temp2.get().currencyname.set(new abap.types.Character(32).set('Austrian Schilling (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Shilling'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AUD'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Australian Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Austr. Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AWG'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Aruban Florin'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Aruban Florin'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AZM'));
    temp2.get().currencyname.set(new abap.types.Character(23).set('Azerbaijani Manat (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Manat'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('AZN'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Azerbaijani Manat'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Manat'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BAM'));
    temp2.get().currencyname.set(new abap.types.Character(39).set('Bosnia and Herzegovina Convertible Mark'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Convert. Mark'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BBD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Barbados Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BDT'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Bangladesh Taka'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Taka'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BEF'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('Belgian Franc (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Belgian Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BGN'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Bulgarian Lev'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Lev'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BHD'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Bahraini Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BIF'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Burundi Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Burundi Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BMD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Bermudan Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Bermudan Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BND'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Brunei Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BOB'));
    temp2.get().currencyname.set(new abap.types.Character(9).set('Boliviano'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('Boliviano'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BRL'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Brazilian Real'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Real'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BSD'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Bahaman Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BTN'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Bhutan Ngultrum'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Ngultrum'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BWP'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Botswana Pula'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Pula'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BYB'));
    temp2.get().currencyname.set(new abap.types.Character(22).set('Belarusian Ruble (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Belarus. Ruble'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BYN'));
    temp2.get().currencyname.set(new abap.types.Character(22).set('Belarusian Ruble (New)'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Bela. Ruble N.'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BYR'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Belarusian Ruble'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Ruble'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('BZD'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Belize Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CAD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Canadian Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Canadian Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CDF'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Congolese Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('test data'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CFP'));
    temp2.get().currencyname.set(new abap.types.Character(30).set('French Franc (Pacific Islands)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Fr. Franc (Pac)'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CHF'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Swiss Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('Swiss Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CLP'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Chilean Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CNY'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Chinese Renminbi'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Renminbi'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('COP'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Colombian Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CRC'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Costa Rica Colon'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Cost.Rica Colon'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CSD'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('Serbian Dinar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Serbian Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CUC'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Peso Convertible'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Peso Convertib.'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CUP'));
    temp2.get().currencyname.set(new abap.types.Character(10).set('Cuban Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('Cuban Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CVE'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Cape Verde Escudo'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Escudo'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CYP'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('Cyprus Pound  (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('Cyprus Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('CZK'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Czech Krona'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Krona'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('DEM'));
    temp2.get().currencyname.set(new abap.types.Character(28).set('German Mark    (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('German Mark'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(4).set('DEM3'));
    temp2.get().currencyname.set(new abap.types.Character(37).set('(Internal) German Mark (3 dec.places)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('(Int.) DEM 3 DP'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('DJF'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Djibouti Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Djibouti Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('DKK'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Danish Krone'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('Danish Krone'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('DOP'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Dominican Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Dominican Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('DZD'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Algerian Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ECS'));
    temp2.get().currencyname.set(new abap.types.Character(30).set('Ecuadorian Sucre (Old --> USD)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Sucre'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('EEK'));
    temp2.get().currencyname.set(new abap.types.Character(28).set('Estonian Krone (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Krona'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('EGP'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Egyptian Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ERN'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Eritrean Nafka'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Nakfa'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ESP'));
    temp2.get().currencyname.set(new abap.types.Character(28).set('Spanish Peseta (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Peseta'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ETB'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Ethiopian Birr'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Birr'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('EUR'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('European Euro'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Euro'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('FIM'));
    temp2.get().currencyname.set(new abap.types.Character(28).set('Finnish Markka (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Finnish markka'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('FJD'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Fiji Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('FKP'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Falkland Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Falkland Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('FRF'));
    temp2.get().currencyname.set(new abap.types.Character(26).set('French Franc (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('French Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GBP'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('British Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Pound sterling'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GEL'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Georgian Lari'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Lari'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GHC'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('Ghanaian Cedi (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Cedi'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GHS'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Ghanian Cedi'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Cedi'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GIP'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Gibraltar Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Gibraltar Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GMD'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Gambian Dalasi'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dalasi'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GNF'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Guinean Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GRD'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('Greek Drachma (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Drachma'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GTQ'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Guatemalan Quetzal'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Quetzal'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GWP'));
    temp2.get().currencyname.set(new abap.types.Character(25).set('Guinea Peso (Old --> SHP)'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('Guinea Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('GYD'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Guyana Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Guyana Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('HKD'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Hong Kong Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('H.K.Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('HNL'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Honduran Lempira'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Lempira'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('HRK'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Croatian Kuna'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Kuna'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('HTG'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Haitian Gourde'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Gourde'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('HUF'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Hungarian Forint'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Forint'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('IDR'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Indonesian Rupiah'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Rupiah'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('IEP'));
    temp2.get().currencyname.set(new abap.types.Character(24).set('Irish Punt (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('Irish Punt'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ILS'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Israeli Scheckel'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Scheckel'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('INR'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Indian Rupee'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Rupee'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('IQD'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Iraqui Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('IRR'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Iranian Rial'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Rial'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ISK'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Iceland Krona'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Krona'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ITL'));
    temp2.get().currencyname.set(new abap.types.Character(26).set('Italian Lira (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Lire'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('JMD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Jamaican Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Jamaican Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('JOD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Jordanian Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Jordanian Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('JPY'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Japanese Yen'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Yen'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KES'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Kenyan Shilling'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Shilling'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KGS'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Kyrgyzstan Som'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Som'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KHR'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Cambodian Riel'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Riel'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KMF'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Comoros Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Comoros Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KPW'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('North Korean Won'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('N. Korean Won'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KRW'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('South Korean Won'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('S.Korean Won'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KWD'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Kuwaiti Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KYD'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Cayman Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Cayman Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('KZT'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Kazakstanian Tenge'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Tenge'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LAK'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Laotian Kip'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Kip'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LBP'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Lebanese Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Lebanese Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LKR'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Sri Lankan Rupee'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Sri Lanka Rupee'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LRD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Liberian Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Liberian Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LSL'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Lesotho Loti'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Loti'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LTL'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Lithuanian Lita'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Lita'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LUF'));
    temp2.get().currencyname.set(new abap.types.Character(30).set('Luxembourg Franc (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('Lux. Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LVL'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Latvian Lat'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Lat'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('LYD'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Libyan Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('Libyan Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MAD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Moroccan Dirham'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dirham'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MDL'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Moldavian Leu'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Leu'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MGA'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Madagascan Ariary'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Madagasc.Ariary'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MGF'));
    temp2.get().currencyname.set(new abap.types.Character(21).set('Madagascan Franc (Old'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Madagascan Fr.'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MKD'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Macedonian Denar'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('Maced. Denar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MMK'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Myanmar Kyat'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Kyat'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MNT'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Mongolian Tugrik'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Tugrik'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MOP'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Macao Pataca'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Pataca'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MRO'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('Mauritanian Ouguiya'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Ouguiya'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MTL'));
    temp2.get().currencyname.set(new abap.types.Character(26).set('Maltese Lira (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Lira'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MUR'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Mauritian Rupee'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Rupee'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MVR'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Maldive Rufiyaa'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Rufiyaa'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MWK'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Malawi Kwacha'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Malawi Kwacha'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MXN'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Mexican Pesos'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MYR'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Malaysian Ringgit'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Ringgit'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MZM'));
    temp2.get().currencyname.set(new abap.types.Character(24).set('Mozambique Metical (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Metical'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('MZN'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Mozambique Metical'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Metical'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NAD'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Namibian Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Namibian Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NGN'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Nigerian Naira'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Naira'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NIO'));
    temp2.get().currencyname.set(new abap.types.Character(22).set('Nicaraguan Cordoba Oro'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('Cordoba Oro'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NLG'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('Dutch Guilder (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Guilder'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NOK'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Norwegian Krone'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Norwegian Krone'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NPR'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Nepalese Rupee'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Rupee'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('NZD'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('New Zealand Dollars'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('N.Zeal.Dollars'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('OMR'));
    temp2.get().currencyname.set(new abap.types.Character(10).set('Omani Rial'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('Omani Rial'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PAB'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Panamanian Balboa'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Balboa'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PEN'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Peruvian New Sol'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('New Sol'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PGK'));
    temp2.get().currencyname.set(new abap.types.Character(21).set('Papua New Guinea Kina'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Kina'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PHP'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Philippine Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PKR'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Pakistani Rupee'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Rupee'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PLN'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Polish Zloty (new)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Zloty'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PTE'));
    temp2.get().currencyname.set(new abap.types.Character(31).set('Portuguese Escudo (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Escudo'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('PYG'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Paraguayan Guarani'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Guarani'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('QAR'));
    temp2.get().currencyname.set(new abap.types.Character(10).set('Qatar Rial'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Rial'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('RMB'));
    temp2.get().currencyname.set(new abap.types.Character(21).set('Chinese Yuan Renminbi'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Yuan Renminbi'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ROL'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Romanian Leu (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('Leu (Old)'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('RON'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Romanian Leu'));
    temp2.get().currencyshortname.set(new abap.types.Character(3).set('Leu'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('RSD'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Serbian Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Serbian Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('RUB'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Russian Ruble'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Ruble'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('RWF'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Rwandan Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SAR'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Saudi Riyal'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Rial'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SBD'));
    temp2.get().currencyname.set(new abap.types.Character(22).set('Solomon Islands Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('Sol.Isl.Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SCR'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Seychelles Rupee'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Rupee'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SDD'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('Sudanese Dinar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SDG'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Sudanese Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SDP'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('Sudanese Pound (until 1992)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SEK'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Swedish Krona'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Swedish Krona'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SGD'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Singapore Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('Sing.Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SHP'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('St.Helena Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('St.Helena Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SIT'));
    temp2.get().currencyname.set(new abap.types.Character(29).set('Slovenian Tolar (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Tolar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SKK'));
    temp2.get().currencyname.set(new abap.types.Character(29).set('Slovakian Krona (Old --> EUR)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Krona'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SLL'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Sierra Leone Leone'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Leone'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SOS'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('Somalian Shilling'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Shilling'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SRD'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Surinam Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Surinam Doillar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SRG'));
    temp2.get().currencyname.set(new abap.types.Character(21).set('Surinam Guilder (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Surinam Guilder'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SSP'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('South Sudanese Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('STD'));
    temp2.get().currencyname.set(new abap.types.Character(25).set('Sao Tome / Principe Dobra'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dobra'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SVC'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('El Salvador Colon'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Colon'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SYP'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Syrian Pound'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('Syrian Pound'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('SZL'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('Swaziland Lilangeni'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('Lilangeni'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('THB'));
    temp2.get().currencyname.set(new abap.types.Character(13).set('Thailand Baht'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Baht'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TJR'));
    temp2.get().currencyname.set(new abap.types.Character(23).set('Tajikistani Ruble (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Ruble'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TJS'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Tajikistani Somoni'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Somoni'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TMM'));
    temp2.get().currencyname.set(new abap.types.Character(25).set('Turkmenistani Manat (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('Manat (Old)'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TMT'));
    temp2.get().currencyname.set(new abap.types.Character(19).set('Turkmenistani Manat'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Manat'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TND'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Tunisian Dinar'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TOP'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Tongan Pa\'anga'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Pa\'anga'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TPE'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('Timor Escudo --> USD'));
    temp2.get().currencyshortname.set(new abap.types.Character(12).set('Timor Escudo'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TRL'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Turkish Lira (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(10).set('Lira (Old)'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TRY'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Turkish Lira'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Lira'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TTD'));
    temp2.get().currencyname.set(new abap.types.Character(26).set('Trinidad and Tobago Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('T.+ T. Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TWD'));
    temp2.get().currencyname.set(new abap.types.Character(17).set('New Taiwan Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('TZS'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Tanzanian Shilling'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Shilling'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('UAH'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Ukraine Hryvnia'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Hryvnia'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('UGX'));
    temp2.get().currencyname.set(new abap.types.Character(16).set('Ugandan Shilling'));
    temp2.get().currencyshortname.set(new abap.types.Character(8).set('Shilling'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('USD'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('United States Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('US Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(4).set('USDN'));
    temp2.get().currencyname.set(new abap.types.Character(40).set('(Internal) United States Dollar (5 Dec.)'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('US Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('UYU'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Uruguayan Peso'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Peso'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('UZS'));
    temp2.get().currencyname.set(new abap.types.Character(14).set('Uzbekistan Som'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Total'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('VEB'));
    temp2.get().currencyname.set(new abap.types.Character(24).set('Venezuelan Bolivar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(13).set('Bolivar (Old)'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('VEF'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('Venezuelan Bolivar'));
    temp2.get().currencyshortname.set(new abap.types.Character(7).set('Bolivar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('VND'));
    temp2.get().currencyname.set(new abap.types.Character(15).set('Vietnamese Dong'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Dong'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('VUV'));
    temp2.get().currencyname.set(new abap.types.Character(12).set('Vanuatu Vatu'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Vatu'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('WST'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Samoan Tala'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Tala'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('XAF'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('Gabon CFA Franc BEAC'));
    temp2.get().currencyshortname.set(new abap.types.Character(14).set('CFA Franc BEAC'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('XCD'));
    temp2.get().currencyname.set(new abap.types.Character(21).set('East Carribean Dollar'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('XEU'));
    temp2.get().currencyname.set(new abap.types.Character(31).set('European Currency Unit (E.C.U.)'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('E.C.U.'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('XOF'));
    temp2.get().currencyname.set(new abap.types.Character(21).set('Benin CFA Franc BCEAO'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('CFA Franc BCEAO'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('XPF'));
    temp2.get().currencyname.set(new abap.types.Character(9).set('CFP Franc'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Franc'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('YER'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Yemeni Ryal'));
    temp2.get().currencyshortname.set(new abap.types.Character(11).set('Yemeni Ryal'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('YUM'));
    temp2.get().currencyname.set(new abap.types.Character(27).set('New Yugoslavian Dinar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(9).set('New Dinar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZAR'));
    temp2.get().currencyname.set(new abap.types.Character(18).set('South African Rand'));
    temp2.get().currencyshortname.set(new abap.types.Character(4).set('Rand'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZMK'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('Zambian Kwacha (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Kwacha'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZMW'));
    temp2.get().currencyname.set(new abap.types.Character(20).set('Zambian Kwacha (New)'));
    temp2.get().currencyshortname.set(new abap.types.Character(6).set('Kwacha'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZRN'));
    temp2.get().currencyname.set(new abap.types.Character(11).set('Zaire (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(5).set('Zaire'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZWD'));
    temp2.get().currencyname.set(new abap.types.Character(23).set('Zimbabwean Dollar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Zimbabwe Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZWL'));
    temp2.get().currencyname.set(new abap.types.Character(23).set('Zimbabwean Dollar (New)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Zimbabwe Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZWN'));
    temp2.get().currencyname.set(new abap.types.Character(23).set('Zimbabwean Dollar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Zimbabwe Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    temp2.get().language.set(new abap.types.Character(1).set('E'));
    temp2.get().currency.set(new abap.types.Character(3).set('ZWR'));
    temp2.get().currencyname.set(new abap.types.Character(23).set('Zimbabwean Dollar (Old)'));
    temp2.get().currencyshortname.set(new abap.types.Character(15).set('Zimbabwe Dollar'));
    abap.statements.insertInternal({data: temp2, table: temp1});
    this.mt_suggestion.set(temp1);
  }
  async z2ui5_if_app$main(INPUT) {
    let client = INPUT?.client;
    if (client?.getQualifiedName === undefined || client.getQualifiedName() !== "Z2UI5_IF_CLIENT") { client = undefined; }
    if (client === undefined) { client = new abap.types.ABAPObject({qualifiedName: "Z2UI5_IF_CLIENT", RTTIName: "\\INTERFACE=Z2UI5_IF_CLIENT"}).set(INPUT.client); }
    let lv_script = new abap.types.String({qualifiedName: "STRING"});
    this.me.get().client.set(client);
    if (abap.compare.eq(this.check_initialized, abap.builtin.abap_false)) {
      lv_script.set(abap.operators.concat(new abap.types.String().set(`   debugger;`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`function setInputFIlter(){`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(` var inp = sap.z2ui5.oView.byId('suggInput');`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(` inp.setFilterFunction(function(sValue, oItem){`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(`         return true;`),abap.operators.concat(new abap.types.String().set(`\n`),abap.operators.concat(new abap.types.String().set(` });`),abap.operators.concat(new abap.types.String().set(`\n`),new abap.types.String().set(`}`))))))))))))));
      this.check_initialized.set(abap.builtin.abap_true);
      await this.set_data();
      await client.get().z2ui5_if_client$view_display({val: (await (await (await (await (await (await abap.Classes['Z2UI5_CL_XML_VIEW'].factory()).get()._z2ui5()).get().timer({finished: (await client.get().z2ui5_if_client$_event({val: new abap.types.String().set(`START`)}))})).get()._generic({ns: new abap.types.String().set(`html`), name: new abap.types.String().set(`script`)})).get()._cc_plain_xml({val: lv_script})).get().stringify())});
    }
    if (abap.compare.initial(((await client.get().z2ui5_if_client$get())).get().event) === false) {
      await this.z2ui5_on_event();
    }
  }
  async z2ui5_on_event() {
    
    let lt_range = abap.types.TableFactory.construct(new abap.types.Structure({"sign": new abap.types.Character(1, undefined), "option": new abap.types.Character(2, undefined), "low": new abap.types.String({qualifiedName: "STRING"}), "high": new abap.types.String({qualifiedName: "STRING"})}, undefined, undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "temp5");
    let temp3 = abap.types.TableFactory.construct(new abap.types.Structure({"sign": new abap.types.Character(1, undefined), "option": new abap.types.Character(2, undefined), "low": new abap.types.String({qualifiedName: "STRING"}), "high": new abap.types.String({qualifiedName: "STRING"})}, undefined, undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "temp5");
    let temp4 = new abap.types.Structure({"sign": new abap.types.Character(1, undefined), "option": new abap.types.Character(2, undefined), "low": new abap.types.String({qualifiedName: "STRING"}), "high": new abap.types.String({qualifiedName: "STRING"})}, undefined, undefined, {}, {});
    let ls_sugg = new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {});
    let unique490 = ((await this.client.get().z2ui5_if_client$get())).get().event;
    if (abap.compare.eq(unique490, new abap.types.Character(5).set('START'))) {
      await this.z2ui5_view_display();
    } else if (abap.compare.eq(unique490, new abap.types.Character(10).set('ON_SUGGEST'))) {
      abap.statements.clear(temp3);
      temp4.get().sign.set(new abap.types.Character(1).set('I'));
      temp4.get().option.set(new abap.types.Character(2).set('CP'));
      temp4.get().low.set(abap.operators.concat(new abap.types.String().set(`*`),abap.operators.concat(this.input,new abap.types.String().set(`*`))));
      abap.statements.insertInternal({data: temp4, table: temp3});
      lt_range.set(temp3);
      abap.statements.clear(this.mt_suggestion_out);
      for await (const unique491 of abap.statements.loop(this.mt_suggestion,{where: async (I) => {return abap.compare.in(I.currencyname, lt_range);}})) {
        ls_sugg.set(unique491);
        abap.statements.insertInternal({data: ls_sugg, table: this.mt_suggestion_out});
      }
      await this.client.get().z2ui5_if_client$view_model_update();
    } else if (abap.compare.eq(unique490, new abap.types.Character(4).set('BACK'))) {
      await this.client.get().z2ui5_if_client$nav_app_leave();
    }
  }
  async z2ui5_view_display() {
    let page = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let temp1 = new abap.types.Character(1, {"qualifiedName":"XSDBOOLEAN","ddicName":"XSDBOOLEAN"});
    let grid = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    let input = new abap.types.ABAPObject({qualifiedName: "Z2UI5_CL_XML_VIEW", RTTIName: "\\CLASS=Z2UI5_CL_XML_VIEW"});
    temp1.set(abap.builtin.boolc(abap.compare.initial(((await this.client.get().z2ui5_if_client$get())).get().s_draft.get().id_prev_app_stack) === false));
    page.set((await (await (await abap.Classes['Z2UI5_CL_XML_VIEW'].factory()).get().shell()).get().page({title: new abap.types.Character(32).set('abap2UI5 - Live Suggestion Event'), navbuttonpress: (await this.client.get().z2ui5_if_client$_event({val: new abap.types.Character(4).set('BACK')})), shownavbutton: temp1})));
    grid.set((await (await page.get().grid({default_span: new abap.types.Character(10).set('L6 M12 S12')})).get().content({ns: new abap.types.Character(6).set('layout')})));
    input.set((await (await (await (await (await grid.get().simple_form({title: new abap.types.Character(5).set('Input')})).get().content({ns: new abap.types.Character(4).set('form')})).get().label({text: new abap.types.Character(21).set('Input with value help')})).get().input({id: new abap.types.String().set(`suggInput`), value: (await this.client.get().z2ui5_if_client$_bind_edit({val: input})), suggest: (await this.client.get().z2ui5_if_client$_event({val: new abap.types.Character(10).set('ON_SUGGEST')})), showtablesuggestionvaluehelp: abap.builtin.abap_false, suggestionrows: (await this.client.get().z2ui5_if_client$_bind({val: this.mt_suggestion_out})), showsuggestion: abap.builtin.abap_true, valueliveupdate: abap.builtin.abap_true, autocomplete: abap.builtin.abap_false})).get().get()));
    await (await (await (await (await (await input.get().suggestion_columns()).get().column()).get().label({text: new abap.types.Character(4).set('Name')})).get().get_parent()).get().column()).get().label({text: new abap.types.Character(8).set('Currency')});
    await (await (await (await input.get().suggestion_rows()).get().column_list_item()).get().label({text: new abap.types.Character(14).set('{CURRENCYNAME}')})).get().label({text: new abap.types.Character(10).set('{CURRENCY}')});
    await (await page.get()._generic({name: new abap.types.String().set(`script`), ns: new abap.types.String().set(`html`)})).get()._cc_plain_xml({val: new abap.types.String().set(`setInputFIlter()`)});
    await this.client.get().z2ui5_if_client$view_display({val: (await page.get().stringify())});
  }
}
abap.Classes['Z2UI5_CL_DEMO_APP_201'] = z2ui5_cl_demo_app_201;
z2ui5_cl_demo_app_201.z2ui5_if_app$version = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_201.z2ui5_if_app$version.set('1.135.0');
z2ui5_cl_demo_app_201.z2ui5_if_app$origin = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_201.z2ui5_if_app$origin.set('https://github.com/abap2UI5/abap2UI5');
z2ui5_cl_demo_app_201.z2ui5_if_app$author = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_201.z2ui5_if_app$author.set('https://github.com/oblomov-dev');
z2ui5_cl_demo_app_201.z2ui5_if_app$license = new abap.types.String({qualifiedName: "STRING"});
z2ui5_cl_demo_app_201.z2ui5_if_app$license.set('MIT');
z2ui5_cl_demo_app_201.ty_s_currency = new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {});
z2ui5_cl_demo_app_201.temp1_f1dd69a9b5 = abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp1_f1dd69a9b5");
z2ui5_cl_demo_app_201.temp2_f1dd69a9b5 = abap.types.TableFactory.construct(new abap.types.Structure({"language": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-LANGUAGE"}), "currency": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCY"}), "currencyname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYNAME"}), "currencyshortname": new abap.types.String({qualifiedName: "Z2UI5_CL_DEMO_APP_201=>TY_S_CURRENCY-CURRENCYSHORTNAME"})}, "Z2UI5_CL_DEMO_APP_201=>ty_s_currency", undefined, {}, {}), {"withHeader":false,"keyType":"USER","primaryKey":{"name":"primary_key","type":"STANDARD","isUnique":false,"keyFields":[]},"secondary":[]}, "Z2UI5_CL_DEMO_APP_201=>temp2_f1dd69a9b5");
export {z2ui5_cl_demo_app_201};
//# sourceMappingURL=z2ui5_cl_demo_app_201.clas.mjs.map